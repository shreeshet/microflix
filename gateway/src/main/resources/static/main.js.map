{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/custommaterial.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/hero-detail/hero-detail.component.css","webpack:///./src/app/hero-detail/hero-detail.component.html","webpack:///./src/app/hero-detail/hero-detail.component.ts","webpack:///./src/app/hero.service.ts","webpack:///./src/app/hero.ts","webpack:///./src/app/heroes/heroes.component.css","webpack:///./src/app/heroes/heroes.component.html","webpack:///./src/app/heroes/heroes.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/message.service.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/mock-heroes.ts","webpack:///./src/app/model/user.ts","webpack:///./src/app/service/movie.service.ts","webpack:///./src/app/service/userservice.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HeroesComponent }      from './heroes/heroes.component';\nimport { DashboardComponent }   from './dashboard/dashboard.component';\nimport { HeroDetailComponent }  from './hero-detail/hero-detail.component';\nimport { LoginComponent } from './login/login.component';\nimport { UserserviceService } from './service/userservice.service';\n\nconst routes: Routes = [\n  { path: '',  component: LoginComponent},\n  { path: 'dashboard',  \n  \t\tcomponent: DashboardComponent,\n\t  \tresolve:{\n\t  \t\tuser: UserserviceService\n\t  \t},\n      canActivate: [UserserviceService]\n  \t}  \n];\n\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [ RouterModule ],\n  providers: [\n  \tUserserviceService\n  ]\n})\nexport class AppRoutingModule { }\n","module.exports = \".example-fill-remaining-space {\\n/* This fills the remaining space, by using flexbox. \\n  Every toolbar row uses a flexbox row layout. */\\n  flex: 1 1 auto;\\n}\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <mat-toolbar-row>\\n    <span>µFlix<i class=\\\"material-icons\\\">movie</i></span>\\n    <span class=\\\"example-fill-remaining-space\\\"></span>\\n    <a href=\\\"https://github.com/shreeshet\\\">\\n    \\t<i class=\\\"material-icons\\\" style=\\\"color: white;\\\">copyright</i></a>\\n</mat-toolbar-row>\\n</mat-toolbar>\\n<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'tour of heroes';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport { AppComponent } from './app.component';\nimport { HeroesComponent } from './heroes/heroes.component';\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LoginComponent } from './login/login.component';\nimport { CustommaterialModule } from './custommaterial.module';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeroesComponent,\n    HeroDetailComponent,\n    MessagesComponent,\n    DashboardComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    CustommaterialModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule, MatToolbarModule, MatGridListModule ,MatCardModule,MatFormFieldModule,MatInputModule,MatBadgeModule,MatIconModule,MatTooltipModule } from '@angular/material';\nimport {MatListModule} from '@angular/material/list';\n\n\n@NgModule({\n  imports: [\n    CommonModule, MatButtonModule, MatToolbarModule,MatGridListModule,MatCardModule,MatFormFieldModule,MatInputModule,MatListModule,MatBadgeModule,MatIconModule,MatTooltipModule\n  ],\n  exports: [\n  \tCommonModule, MatButtonModule, MatToolbarModule,MatGridListModule,MatCardModule,MatFormFieldModule,MatInputModule,MatListModule,MatBadgeModule,MatIconModule,MatTooltipModule\n  ],\n  declarations: []\n})\nexport class CustommaterialModule { }\n","module.exports = \"/* DashboardComponent's private CSS styles */\\n[class*='col-'] {\\n  float: left;\\n  padding-right: 20px;\\n  padding-bottom: 20px;\\n}\\n[class*='col-']:last-of-type {\\n  padding-right: 0;\\n}\\na {\\n  text-decoration: none;\\n}\\n*, *:after, *:before {\\n  box-sizing: border-box;\\n}\\nh3 {\\n  text-align: center; margin-bottom: 0;\\n}\\nh4 {\\n  position: relative;\\n}\\n.grid {\\n  margin: 0;\\n}\\n.col-1-4 {\\n  width: 25%;\\n}\\n.module {\\n  padding: 20px;\\n  text-align: center;\\n  color: #eee;\\n  max-height: 120px;\\n  min-width: 120px;\\n  background-color: #607d8b;\\n  border-radius: 2px;\\n}\\n.module:hover {\\n  background-color: #eee;\\n  cursor: pointer;\\n  color: #607d8b;\\n}\\n.grid-pad {\\n  padding: 10px 0;\\n}\\n.grid-pad > [class*='col-']:last-of-type {\\n  padding-right: 20px;\\n}\\n@media (max-width: 600px) {\\n  .module {\\n    font-size: 10px;\\n    max-height: 75px; }\\n}\\n@media (max-width: 1024px) {\\n  .grid {\\n    margin: 0;\\n  }\\n  .module {\\n    min-width: 60px;\\n  }\\n}\"","module.exports = \"<mat-card class=\\\"example-card\\\">\\n\\t<mat-card-header>\\n    \\t<mat-card-title>{{user.firstName}}, {{user.lastName}}</mat-card-title>    \\t\\n  \\t</mat-card-header>\\n  \\t<mat-card-content>\\n  \\t\\t<mat-form-field class=\\\"example-full-width\\\">\\n    \\t\\t<input matInput #search type=\\\"search\\\" value=\\\"\\\" (keyup.enter)=\\\"onKeyEnter(search.value)\\\">\\n  \\t\\t</mat-form-field>\\n  \\t\\t<mat-nav-list>\\n  \\t\\t\\t <mat-list-item *ngFor=\\\"let movie of movies\\\">\\n  \\t\\t\\t \\t  <span matBadge=\\\"{{movie.rating}}\\\" matBadgePosition=\\\"before\\\" matBadgeOverlap=\\\"false\\\" class=\\\"badge\\\">{{movie.title}}, {{movie.category}} , {{movie.description}} ,{{movie.price}}\\n            </span>            \\n  \\t\\t\\t </mat-list-item>\\n  \\t\\t</mat-nav-list>\\t\\n  \\t</mat-card-content>\\n</mat-card>\\t\"","import { Component, OnInit } from '@angular/core';\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\nimport { UserserviceService } from '../service/userservice.service';\nimport { MovieService } from '../service/movie.service';\nimport { User } from '../model/user';\nimport { Movie } from '../model/movie';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: [ './dashboard.component.css' ]\n})\nexport class DashboardComponent implements OnInit {\n  heroes: Hero[] = [];\n  user: User;\n  movies: Movie[] = [];\n\n  constructor(private route: ActivatedRoute, private movieService: MovieService){}\n\n  onKeyEnter(value: string){\n    this.movieService\n      .movieSearch(value)\n      .subscribe(\n        (data: Movie[]) => {this.movies=data},\n        error => console.log(error)\n      );\n  }\n\n  ngOnInit() {\n      \n\n      this.route.data\n        .subscribe((data:{user:User}) => {\n          this.user = data.user;\n      });\n  }\n}","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"hero\\\">\\n\\t<h2>{{ hero.name | uppercase }} Details</h2>\\n\\t<div><span>id: </span>{{hero.id}}</div>\\n\\t<div>\\n\\t  <label>name:\\n\\t    <input [(ngModel)]=\\\"hero.name\\\" placeholder=\\\"name\\\">\\n\\t  </label>\\n\\t</div>\\n\\t<button (click)=\\\"goBack()\\\">go back</button>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Hero } from '../hero';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { HeroService }  from '../hero.service';\n\n@Component({\n  selector: 'app-hero-detail',\n  templateUrl: './hero-detail.component.html',\n  styleUrls: ['./hero-detail.component.css']\n})\nexport class HeroDetailComponent implements OnInit {\n\n  constructor(\n\t  private route: ActivatedRoute,\n\t  private heroService: HeroService,\n\t  private location: Location\n\t) {}\n\n  ngOnInit(): void {\n  \tthis.getHero();\n  }\n\n  getHero() {\n  \tconst id = +this.route.snapshot.paramMap.get('id');\n  \t this.heroService.getHero(id)\n    \t.subscribe(hero => this.hero = hero);\n  }\n\n  goBack() {\n  \tthis.location.back();\n  }\n\n  @Input() hero: Hero;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Hero } from './hero';\nimport { HEROES } from './mock-heroes';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from './message.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeroService {\n\n  constructor(private messageService: MessageService) { }\n\n  getHeroes(): Observable<Hero[]> {\n  \tthis.messageService.add(\"blha blah\");\n  \treturn of(HEROES);\n  }\n\n  getHero(id: number): Observable<Hero> {\n\t  // TODO: send the message _after_ fetching the hero\n\t  this.messageService.add(`HeroService: fetched hero id=${id}`);\n\t  return of(HEROES.find(hero => hero.id === id));\n  }\n}\n","export class Hero {\n\tid: number;\n\tname: string;\n}","module.exports = \"/* HeroesComponent's private CSS styles */\\n.selected {\\n  background-color: #CFD8DC !important;\\n  color: white;\\n}\\n.heroes {\\n  margin: 0 0 2em 0;\\n  list-style-type: none;\\n  padding: 0;\\n  width: 15em;\\n}\\n.heroes li {\\n  cursor: pointer;\\n  position: relative;\\n  left: 0;\\n  background-color: #EEE;\\n  margin: .5em;\\n  padding: .3em 0;\\n  height: 1.6em;\\n  border-radius: 4px;\\n}\\n.heroes li.selected:hover {\\n  background-color: #BBD8DC !important;\\n  color: white;\\n}\\n.heroes li:hover {\\n  color: #607D8B;\\n  background-color: #DDD;\\n  left: .1em;\\n}\\n.heroes .text {\\n  position: relative;\\n  top: -3px;\\n}\\n.heroes .badge {\\n  display: inline-block;\\n  font-size: small;\\n  color: white;\\n  padding: 0.8em 0.7em 0 0.7em;\\n  background-color: #607D8B;\\n  line-height: 1em;\\n  position: relative;\\n  left: -1px;\\n  top: -4px;\\n  height: 1.8em;\\n  margin-right: .8em;\\n  border-radius: 4px 0 0 4px;\\n}\"","module.exports = \"<h2>My Heroes</h2>\\n<ul class=\\\"heroes\\\">\\n  <li *ngFor=\\\"let hero of heroes\\\">\\n    <a routerLink=\\\"/detail/{{hero.id}}\\\">\\n      <span class=\\\"badge\\\">{{hero.id}}</span> {{hero.name}}\\n    </a>\\n  </li>\\n</ul>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Hero } from '../hero';\nimport { HEROES } from '../mock-heroes';\nimport { HeroService } from '../hero.service';\n\n\n@Component({\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.css']\n})\nexport class HeroesComponent implements OnInit {\n\n  constructor(private heroService: HeroService) { }\n\n  ngOnInit() {\n  \tthis.getHeroes();\n  }\n\n  getHeroes(): void {\n  \tthis.heroService\n  \t\t.getHeroes()\n  \t\t.subscribe(heroes => this.heroes = heroes);\n\n  }\n\n  heroes: Hero[];\n\n\n}\n","module.exports = \"\"","module.exports = \"<mat-card class=\\\"example-card\\\">\\n   <mat-card-header>\\n     <mat-card-title>Login</mat-card-title>\\n   </mat-card-header>\\n   <mat-card-content>\\n   \\t <form class=\\\"example-form\\\">\\n   \\t \\t<table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\n         <tr>\\n           <td>\\n             <mat-form-field>\\n             \\t<input matInput placeholder=\\\"username\\\" name=\\\"username\\\" [(ngModel)]=\\\"username\\\" required>             \\t\\n             </mat-form-field>\\n           </td>\\n         </tr>\\n         <tr>\\n           <td>         \\n         \\t <mat-form-field>\\n             \\t<input matInput type=\\\"password\\\" placeholder=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" required>\\n             </mat-form-field>\\n             </td>\\n            </tr>\\t\\n        </table>\\n   \\t </form>\\t\\n   </mat-card-content>\\n   <mat-card-actions>\\n     <button mat-raised-button (click)=\\\"login()\\\" color=\\\"primary\\\">Login</button>\\n   </mat-card-actions>\\n</mat-card>\"","import { Component, OnInit , EventEmitter, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { User } from '../model/user';\nimport { UserserviceService } from '../service/userservice.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  @Output() loginsuccess = new EventEmitter<User>();\n\n  username: string;\n  password: string;\n\n  constructor(private router : Router,private userService : UserserviceService) { }\n\n  ngOnInit() {\n  }\n\n  login() {\n     this.userService.login(this.username,this.password)\n        .subscribe((user: User)=> {\n          this.router.navigate([\"dashboard\"]);\n          this.loginsuccess.emit(user);          \n        });  \n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  messages: string[] = []; \n  \n  add(message:string) {\n  \tthis.messages.push(message);\n  }\n\n  constructor() { }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"messageService.messages.length\\\">\\n\\n  <h2>Messages</h2>\\n  <button class=\\\"clear\\\"\\n          (click)=\\\"messageService.clear()\\\">clear</button>\\n  <div *ngFor='let message of messageService.messages'> {{message}} </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) {}\n\n  ngOnInit() {\n  }\n\n}\n","import { Hero } from './hero';\n\nexport const HEROES: Hero[] = [\n  { id: 11, name: 'Mr. Nice' },\n  { id: 12, name: 'Narco' },\n  { id: 13, name: 'Bombasto' },\n  { id: 14, name: 'Celeritas' },\n  { id: 15, name: 'Magneta' },\n  { id: 16, name: 'RubberMan' },\n  { id: 17, name: 'Dynama' },\n  { id: 18, name: 'Dr IQ' },\n  { id: 19, name: 'Magma' },\n  { id: 20, name: 'Tornado' }\n];","export class User {\n\tprivate customerId: number;\n\tprivate userName: string;\n\tprivate fullName: string;\n\tprivate firstName: string;\n\tprivate lastName: string;\n\tprivate email: string;\n}","import { Injectable } from '@angular/core';\nimport { Observable, of , Subject} from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Movie } from '../model/movie';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n  private movieSearchUrl= '/movieservice/movie/title';\t\n\n  constructor(private http: HttpClient) { }\n\n  movieSearch(searchText: string) {\n  \tconst url = `${this.movieSearchUrl}/${searchText}`;\n    \n    return this.http\n  \t\t.get(url)\n  \t\t.pipe(\n  \t\t\ttap(r => console.log(r))\n  \t\t);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of , Subject} from 'rxjs';\nimport { User } from '../model/user';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Router, Resolve, RouterStateSnapshot,Route, CanActivate, \n         ActivatedRouteSnapshot } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserserviceService implements Resolve<User>,CanActivate{\n\t\n  private userLoginUrl= '/userservice/first_name/';\t\n  private user:User;\n\n  constructor(private http: HttpClient,private router: Router) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):   Observable<User>{\n    return of(this.user);\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    let url: string = state.url;\n    \n    if(this.user) return true;\n\n    this.router.navigate(['/']);\n    return false;\n  }\n\n  login(username:string,password:string): Observable<User> {\n  \tconst url = `${this.userLoginUrl}/${username}`;\n  \treturn this.http.get(url)\n      .pipe(\n        map(res => Object.assign(new User(),res)),\n        tap(u => {this.user=u;})\n      );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}